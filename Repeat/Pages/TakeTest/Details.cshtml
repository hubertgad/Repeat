@page
@model Repeat.Pages.TakeTest.DetailsModel

@{
    ViewData["Title"] = "Details";
}

    <h4>@Html.DisplayFor(model => model.Test.Set.Name) - test results:</h4>
<hr />

<div>
    <dl class="row">
        <dt class="col-sm-2">
            <nobr>Result:</nobr>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Result) %
        </dd>
        <dt class="col-sm-2">
            <nobr>Total Points:</nobr>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TotalCollectedPoints) / @Html.DisplayFor(model => model.AvailablePoints)
        </dd>
    </dl>

    @foreach (var question in Model.Questions)
    {
        <div class="jumbotron">
            <h4>Question @(Model.Questions.IndexOf(question) + 1):</h4>
            <hr />
            <dl class="row">
                <dd class="col-12 mb-3">
                    <partial name="Questions/_TextPartial" model="question.QuestionText" />
                </dd>
            @if (question.Picture != null)
            {
                <dt class="col-3 col-xl-2">
                    <label>Picture:</label>
                </dt>
                <dd class="col-9 col-xl-10">
                    <partial name="Questions/_PicturePartial" model="question.Picture" />
                </dd>
            }
            @for (int i = 0; i < Model.Test.TestQuestions[Model.Questions.IndexOf(question)].ChoosenAnswers.Count; i++)
            {
                <dt class="col-3 col-xl-2">
                        Answer @((char)('A' + i)):
                        @if (question.Answers[i].IsTrue == true)
                        {<span class="badge badge-success">True</span> }
                        else
                        { <span class="badge badge-danger">False</span>}
                </dt>
                <dd class="col-9 col-xl-10">
                    <div class="@(Model.Test.TestQuestions[Model.Questions.IndexOf(question)].ChoosenAnswers.FirstOrDefault(q => q.AnswerID == question.Answers[i].ID).GivenAnswer == true ? "given-answer" : "")">
                        <partial name="Questions/_TextPartial" model="question.Answers[i].AnswerText" />
                    </div>
                </dd>
            }
            @if (question.Reference != null)
            {
                <dt class="col-3 col-xl-2">
                    <label>References:</label>
                </dt>
                <dd class="col-9 col-xl-10">
                    <a class="multiline">@Html.DisplayFor(model => question.Reference)</a>
                </dd>
            }
            </dl>
            <div>
                Points: @Html.DisplayFor(model => model.QuestionPoints[Model.Questions.IndexOf(question)]) / @question.Answers.Where(q => q.IsTrue == true).ToList().Count
            </div>
        </div>
    }
</div>
<div>
    <a asp-page="./Index" class="btn btn-dark">Back to List</a>
</div>