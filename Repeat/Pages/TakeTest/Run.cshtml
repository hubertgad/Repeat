@page
@model Repeat.RunModel

@{
    ViewData["Title"] = "Run";
}


<h4>Question @(Model.Test.CurrentQuestionIndex + 1):</h4>
<hr />
<div class="col-md-12">
    <div>
        @foreach (var part in Model.SplitTextByPattern(Model.CurrentQuestion.QuestionText))
        {
            if (part.Contains(@"<code>") && (part.Contains(@"</code>")))
            {
                <span class="code">
                    @foreach (var line in part.Replace("<code>", "").Replace("</code>", "").Split("\n"))
                    {
                        <code class="multiline">@Html.DisplayFor(x => line)<br /></code>
                    }
                </span>
            }
            else
            {
                <span class="multiline">@Html.DisplayFor(x => part)</span>
            }
        }
    </div>
    <br />
    <div>
        @if (@Model.CurrentQuestion.Picture != null)
        {
            var base64 = Convert.ToBase64String(Model.CurrentQuestion.Picture.Data);
            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
            <img class="embed-responsive-item" src="@imgSrc" />
            <span class="multiline">
            </span>
        }
    </div>
    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Test.ID" />
        <input type="hidden" asp-for="Test.SetID" />
        <input type="hidden" asp-for="Test.UserID" />
        <input type="hidden" asp-for="Test.IsCompleted" />
        <input type="hidden" asp-for="Test.CurrentQuestionIndex" />
        @for (int i = 0; i < Model.CurrentQuestion.Answers.Count; i++)
        {
            <div class="input-group">
                <input type="hidden" asp-for="QuestionResponse.ChoosenAnswers[i].ID" />
                <input type="hidden" asp-for="QuestionResponse.ChoosenAnswers[i].QuestionResponseID" />
                <input type="hidden" asp-for="QuestionResponse.ChoosenAnswers[i].QuestionID" />
                <input type="hidden" asp-for="QuestionResponse.ChoosenAnswers[i].AnswerID" />
                <div class="d-inline">
                    <input type="checkbox" class="align-content-center"
                            asp-for="QuestionResponse.ChoosenAnswers[i].GivenAnswer" />
                </div>
                <div class="d-inline">
                    @foreach (var part in Model.SplitTextByPattern(Model.CurrentQuestion.Answers[i].AnswerText))
                    {
                        if (part.Contains(@"<code>") && (part.Contains(@"</code>")))
                        {
                            <span>
                                @foreach (var line in part.Replace("<code>", "").Replace("</code>", "").Split("\n"))
                                {
                                    <code class="multiline">@Html.DisplayFor(x => line)<br /></code>
                                }
                            </span>
                        }
                        else
                        {
                            <span class="multiline">@Html.DisplayFor(x => part)</span>
                        }
                    }
                </div>
            </div>
        }
        <div class="btn-group">
            @if (Model.Test.CurrentQuestionIndex == 0)
            {
                <button disabled class="nav-link btn btn-my m-md-3">Previous</button>
            }
            else
            {
                <input type="submit" class="nav-link btn btn-my m-md-3"
                       asp-route-id="@Model.Test.SetID" asp-route-options="Previous"
                       value="Previous" />
            }
            @if (Model.Test.CurrentQuestionIndex == Model.Test.TestQuestions.Count - 1)
            {
                <input type="submit" class="nav-link btn btn-success m-md-3" asp-route-id="@Model.Test.ID"
                       asp-route-options="Finish" value="Finish test" />
            }
            @if (Model.Test.CurrentQuestionIndex == Model.Test.TestQuestions.Count - 1)
            {
                <button disabled class="nav-link btn btn-my m-md-3">Next</button>
            }
            else
            {
                <input type="submit" class="nav-link btn btn-my m-md-3" asp-route-id="@Model.Test.SetID"
                       asp-route-options="Next" value="Next" />
            }
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}